{"version":3,"sources":["data/data.js","App.style.js","utility/utility.js","theme/colors.js","theme/border1px.js","components/Header/Header.style.js","components/Header/Header.js","components/Window/Window.style.js","theme/opacity.js","components/Window/Window.js","components/Footer/Footer.style.js","components/Footer/Footer.js","App.js","index.js"],"names":["defaultBackground","process","colors","images","Global","createGlobalStyle","AppWrap","styled","div","backgroundUrl","dateNow","Date","toDateString","split","day","month","dayOfMonth","MM","getMinutes","HH","getHours","styledImg","length","flexBasis","height","white","grayOpacity","border1px","Wrap","header","Container","Logo","I","i","Time","Header","props","state","date","this","dateUpdate","setInterval","getSeconds","setState","className","React","Component","hide","keyframes","show","сontentHidden","Points","Point","span","color","TitleWrap","Title","h3","Search","SearchIcon","Input","input","Body","ContentWrap","Content","Border","Image","url","Window","searchImg","e","filterImg","filter","img","tags","includes","target","value","getImages","a","fetch","responce","json","data","hits","map","id","largeImageURL","changeBackOnClick","key","onChange","type","placeholder","index","array","onClick","AppFooter","footer","focus","name","concat","Separator","Footer","toggleOnClick","Fragment","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac55d5bd.chunk.js","sourcesContent":["export const key = '17518139-b73def73b5f5b784fdb869618'\nexport const defaultBackground = `${process.env.PUBLIC_URL}/images/background/background.jpg`\nexport const colors = ['red', 'yellow', 'gray']\nexport const images = [\n  'message',\n  'mozilla',\n  'settings',\n  'telegram',\n  'bash',\n  'trash-bin',\n]\n","import styled, { createGlobalStyle } from 'styled-components'\n\nimport { defaultBackground } from './data/index'\n\nexport const Global = createGlobalStyle`\n  @font-face {\n    src: url('https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,200;1,200;1,300&display=swap'),\n  }\n\n  * {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    font-weight: 800;\n    font-family: 'Roboto Mono', monospace;\n  }\n\n`\n\nexport const AppWrap = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: url(${({ backgroundUrl }) => backgroundUrl || defaultBackground})\n    center center / cover no-repeat;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    align-items: center;\n  }\n`\n","export function dateNow() {\n  const [day, month, dayOfMonth] = new Date().toDateString().split(' ')\n  let MM = new Date().getMinutes()\n  let HH = new Date().getHours()\n\n  MM = MM < 10 ? `0${MM}` : MM\n\n  HH = HH < 10 ? `0${HH}` : HH\n\n  const date = `${day} ${dayOfMonth} ${month} ${HH}:${MM}`\n\n  return date\n}\n\nexport function styledImg(images) {\n  switch (images.length) {\n    case 1:\n      return {\n        flexBasis: '50%',\n        height: '50%',\n      }\n    case 2:\n      return {\n        flexBasis: '55%',\n        height: '40%',\n      }\n    default:\n      return {\n        flexBasis: '26%',\n        height: '40%',\n      }\n  }\n}\n","export const white = '#ffffff'\nexport const grayOpacity = 'rgba(189, 190, 189, 0.7)'\n","export const border1px = '1px solid'\n","import styled from 'styled-components'\nimport { grayOpacity, white } from '../../theme'\n\nexport const Wrap = styled.header`\n  width: 100%;\n  background: ${grayOpacity};\n`\n\nexport const Container = styled.div`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport const Logo = styled.div`\n  width: 20px;\n  margin: 10px 0 5px 20px;\n  color: ${white};\n`\n\nexport const I = styled.i`\n  filter: drop-shadow(1px 3px 5px white);\n`\n\nexport const Time = styled.div`\n  max-width: 300px;\n  margin: 10px 10px 5px 0;\n  color: ${white};\n`\n","import React from 'react'\nimport { dateNow } from '../../utility'\nimport { Wrap, Container, Logo, I, Time } from './Header.style'\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      date: dateNow(),\n    }\n  }\n\n  componentDidMount() {\n    this.dateUpdate()\n  }\n\n  dateUpdate() {\n    setInterval(() => {\n      if (new Date().getSeconds() === 0) this.setState({ date: dateNow() })\n    }, 1000)\n  }\n\n  render() {\n    const { date } = this.state\n    return (\n      <Wrap>\n        <Container>\n          <Logo>\n            <I className=\"fa fa-apple fa-lg\" />\n          </Logo>\n          <Time>\n            <p>{date}</p>\n          </Time>\n        </Container>\n      </Wrap>\n    )\n  }\n}\n","import styled, { keyframes } from 'styled-components'\nimport { white, border1px, opacity, grayOpacity } from '../../theme'\n\nconst hide = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`\n\nconst show = keyframes`\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`\n\nexport const Wrap = styled.div`\n  width: 35vw;\n  height: 60vh;\n  min-width: 500px;\n  min-height: 400px;\n  margin: 0 0 50px 50px;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  background: ${white};\n  animation: ${({ сontentHidden }) => (сontentHidden ? hide : show)} 0.35s\n    forwards;\n\n  @media (max-width: 768px) {\n    margin: 0;\n    min-width: 450px;\n    height: 50vh;\n  }\n\n  @media (max-width: 425px) {\n    min-width: 350px;\n    min-height: 350px;\n  }\n`\n\nexport const Header = styled.header`\n  height: 13%;\n  border-bottom: ${`${border1px} ${grayOpacity}`};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Points = styled.div`\n  display: flex;\n  margin: 0 0 0 20px;\n`\n\nexport const Point = styled.span`\n  width: 13px;\n  height: 13px;\n  border-radius: 50%;\n  border: border1px grayOpacity;\n  background: ${({ color }) => color};\n  box-shadow: 1px 1px 5px ${({ color }) => color};\n  margin: 0 0 0 6px;\n`\nexport const TitleWrap = styled.div`\n  flex-grow: 1;\n  text-align: center;\n  font-size: 14px;\n\n  @media (max-width: 768px) {\n    font-size: 12px;\n    margin: 0 0 0 20px;\n  }\n\n  @media (max-width: 425px) {\n    margin: 0;\n  }\n`\n\nexport const Title = styled.h3`\n  @media (min-width: 768px) {\n    font-size: large;\n  }\n`\n\nexport const Search = styled.div`\n  margin: 0 10px 0 0;\n`\n\nexport const SearchIcon = styled.i`\n  width: 26px;\n  height: 26px;\n  line-height: 22px;\n  text-align: center;\n  left: 28px;\n  position: relative;\n  z-index: 1;\n  float: left;\n  opacity: 0.6;\n\n  @media (max-width: 425px) {\n    width: 0px;\n    height: 0px;\n    left: 10px;\n  }\n`\n\nexport const Input = styled.input`\n  height: 25px;\n  width: 120px;\n  border: ${`${border1px} `} rgba(189, 190, 189, ${opacity});\n  border-radius: 15px;\n  padding: 0 0 0 26px;\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: 425px) {\n    width: 95px;\n    padding: 0 0 0 30px;\n  }\n`\n\nexport const Body = styled.div`\n  padding: 0 0 10px 0;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  flex-grow: 1;\n`\n\nexport const ContentWrap = styled.div`\n  width: 94%;\n  height: 90%;\n  border: ${`${border1px} `} gray;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(235, 232, 232, 0.89);\n`\n\nexport const Content = styled.div`\n  min-width: 350px;\n  min-height: 270px;\n  width: 70%;\n  height: 70%;\n  border: ${`${border1px} `} gray;\n  overflow-y: scroll;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  background: ${white};\n\n  &::-webkit-scrollbar {\n    width: 9px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: @white;\n    border: @border-1 @gray-opacity;\n    box-shadow: inset 1px 0 5px gray;\n    -webkit-box-shadow: inset 1px 0 5px gray;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 20px;\n    background: gray;\n  }\n\n  &::-webkit-scrollbar-track-piece {\n    margin: 2px;\n  }\n\n  @media (max-width: 425px) {\n    min-width: 250px;\n    min-height: 250px;\n  }\n`\n\nexport const Border = styled.span`\n  display: none;\n  position: relative;\n  right: 5%;\n  bottom: 5%;\n  width: 110%;\n  height: 110%;\n  border: 3px solid gray;\n  border-radius: 5px;\n  }\n`\n\nexport const Image = styled.div`\n  margin: 10px;\n  height: ${({ styledImg }) => styledImg.height};\n  flex-basis: ${({ styledImg }) => styledImg.flexBasis};\n  background: url(${({ url }) => url}) center center/cover;\n  cursor: pointer;\n\n  &:hover ${Border} {\n    display: block;\n  }\n\n  @media (max-width: 425px) {\n    flex-basis: 40%;\n  }\n`\n","export const opacity = '0.7'\n","import React from 'react'\n\nimport { key, colors } from '../../data'\nimport { styledImg } from '../../utility'\nimport {\n  Wrap,\n  Header,\n  Points,\n  Point,\n  Search,\n  SearchIcon,\n  Input,\n  Body,\n  ContentWrap,\n  Content,\n  Image,\n  Border,\n  Title,\n  TitleWrap,\n} from './Window.style'\n\nexport default class Window extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      images: [],\n      filterImg: null,\n    }\n  }\n\n  componentDidMount() {\n    this.getImages()\n  }\n\n  async getImages() {\n    const responce = await fetch(\n      `https://pixabay.com/api/?key=${key}&image_type=photo`,\n    )\n    const data = await responce.json()\n\n    const images = data.hits.map(img => ({\n      id: img.id,\n      url: img.largeImageURL,\n      tags: img.tags,\n    }))\n\n    this.setState({ images })\n  }\n\n  searchImg = e => {\n    const { images } = this.state\n    const filterImg = images.filter(img => img.tags.includes(e.target.value))\n\n    this.setState({ filterImg })\n  }\n\n  render() {\n    const { images, filterImg } = this.state\n    const { сontentHidden, changeBackOnClick } = this.props\n\n    return (\n      <Wrap сontentHidden={сontentHidden}>\n        <Header>\n          <Points>\n            {colors.map(color => (\n              <Point key={color} color={color} />\n            ))}\n          </Points>\n          <TitleWrap>\n            <Title>Desktop &amp; Screen Saver</Title>\n          </TitleWrap>\n          <Search>\n            <SearchIcon className=\"fa fa-search fa-1x\" />\n            <Input\n              onChange={e => this.searchImg(e)}\n              type=\"text\"\n              placeholder=\"Search\"\n            />\n          </Search>\n        </Header>\n        <Body>\n          <ContentWrap>\n            <Content>\n              {(filterImg || images).map((img, index, array) => (\n                <Image\n                  onClick={changeBackOnClick(img.url)}\n                  key={img.id}\n                  url={img.url}\n                  styledImg={styledImg(array)}\n                >\n                  <Border />\n                </Image>\n              ))}\n            </Content>\n          </ContentWrap>\n        </Body>\n      </Wrap>\n    )\n  }\n}\n","import styled, { keyframes } from 'styled-components'\n\nimport { grayOpacity, border1px, white } from '../../theme'\n\nexport const AppFooter = styled.footer`\n  position: relative;\n  width: 550px;\n  display: flex;\n  justify-content: center;\n  align-self: center;\n  bottom: 5%;\n\n  @media (max-width: 768px) {\n    margin: 0;\n    max-width: 70%;\n  }\n\n  @media (max-width: 425px) {\n    max-width: 90%;\n  }\n`\n\nexport const Wrap = styled.div`\n  width: 100%;\n  height: 90px;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${grayOpacity};\n\n  @media (max-width: 768px) {\n    min-width: 500px;\n  }\n\n  @media (max-width: 425px) {\n    min-width: 350px;\n  }\n`\n\nconst focus = keyframes`\n  from {\n    transform: scale(1);\n    -webkit-transform: scale(1);\n    -ms-transform: scale(1);\n  }\n  to {\n    transform: scale(1.2);\n    -webkit-transform: scale(1.2);\n    -ms-transform: scale(1.2);\n  }\n`\n\nexport const Image = styled.div`\n  flex-basis: 15%;\n  height: 70px;\n  background: url(${({ name }) =>\n      process.env.PUBLIC_URL.concat('/images/footer/', name, '.png')})\n    center center / cover no-repeat;\n\n  &:first-child::before {\n    content: '22';\n    display: table-cell;\n    position: relative;\n    width: 25px;\n    height: 24px;\n    font-size: 12px;\n    left: 245%;\n    bottom: 5px;\n    border-radius: 50%;\n    background: red;\n    color: ${white};\n    text-align: center;\n    vertical-align: middle;\n\n    @media (max-width: 768px) {\n      width: 23px;\n      height: 22px;\n      left: 250%;\n    }\n\n    @media (max-width: 425px) {\n      left: 190%;\n      width: 20px;\n      height: 20px;\n    }\n  }\n\n  &:hover {\n    cursor: pointer;\n    animation: ${focus} 0.5s forwards;\n  }\n\n  @media (max-width: 425px) {\n    flex-basis: 16%;\n    height: 55px;\n  }\n`\n\nexport const Separator = styled.div`\n  height: 60px;\n  margin: 0 15px;\n  border: ${`${border1px} `} black;\n`\n","import React from 'react'\n\nimport { images } from '../../data'\nimport { AppFooter, Wrap, Image, Separator } from './Footer.style'\n\nexport default function Footer({ toggleOnClick }) {\n  return (\n    <AppFooter>\n      <Wrap>\n        {images.map(name => {\n          if (name === 'settings')\n            return <Image onClick={toggleOnClick} key={name} name={name} />\n\n          if (name === 'trash-bin')\n            return (\n              <React.Fragment key={name}>\n                <Separator />\n                <Image name={name} />\n              </React.Fragment>\n            )\n          return <Image key={name} name={name} />\n        })}\n      </Wrap>\n    </AppFooter>\n  )\n}\n","import React from 'react'\n\nimport { Global, AppWrap } from './App.style'\nimport Header from './components/Header/Header'\nimport Window from './components/Window/Window'\nimport Footer from './components/Footer/Footer'\n\nexport default class App extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      сontentHidden: false,\n      backgroundUrl: '',\n    }\n  }\n\n  toggleOnClick = () => {\n    this.setState(state => ({ сontentHidden: !state.сontentHidden }))\n  }\n\n  changeBackOnClick = url => () => {\n    this.setState({ backgroundUrl: url })\n  }\n\n  render() {\n    const { backgroundUrl, сontentHidden } = this.state\n    return (\n      <>\n        <Global />\n        <AppWrap backgroundUrl={backgroundUrl}>\n          <Header />\n          <Window\n            changeBackOnClick={this.changeBackOnClick}\n            сontentHidden={сontentHidden}\n          />\n          <Footer toggleOnClick={this.toggleOnClick} />\n        </AppWrap>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}